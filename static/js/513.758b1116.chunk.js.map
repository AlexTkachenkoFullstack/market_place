{"version":3,"file":"static/js/513.758b1116.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.styled.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { devices } from 'constants/constants';\n\nexport const Form = styled.form`\n  width: 90%;\n  background: rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10px);\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  border: none;\n  border-radius: 20px;\n  border-image: linear-gradient(90deg, #00c9ff 0%, #92fe9d 100%) 20% / 1 / 0\n    stretch;\n  padding: 10px;\n  @media screen and ${devices.xs} and (max-width: 767px) {\n    width: 244px;\n    right: 50%;\n    transform: translateX(50%);\n  }\n  @media screen and ${devices.md} {\n    width: 300px;\n    right: 24px;\n    top: 15px;\n  }\n  @media screen and ${devices.lg} {\n    width: 500px;\n    right: 50px;\n    top: 150px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 12px;\n`;\nexport const Label = styled.label`\n  font-family: 'Bagel Fat One', cursive;\n  letter-spacing: 2px;\n  font-size: 18px;\n  color: #315fe3;\n  @media screen and ${devices.md} {\n    font-size: 24px;\n  }\n  @media screen and ${devices.lg} {\n    font-size: 28px;\n  }\n`;\nexport const Input = styled.input`\n  font-family: 'Caveat', cursive;\n  letter-spacing: 2px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  font-size: 18px;\n  @media screen and ${devices.md} {\n    font-size: 24px;\n  }\n  @media screen and ${devices.lg} {\n    font-size: 28px;\n  }\n`;\n\nexport const EmailHelpText = styled.div`\n  font-family: 'Caveat', cursive;\n  font-size: 14px;\n  @media screen and ${devices.md} {\n    font-size: 18px;\n  }\n  @media screen and ${devices.lg} {\n    font-size: 24px;\n  }\n`;\n\nexport const RegButton = styled.button`\n  font-family: 'Bagel Fat One', cursive;\n  letter-spacing: 1px;\n  width: 100px;\n  font-size: 18px;\n  @media screen and ${devices.md} {\n    width: 120px;\n    font-size: 22px;\n  }\n  @media screen and ${devices.lg} {\n    width: 150px;\n    font-size: 28px;\n  }\n`;\n","import { useDispatch } from \"react-redux\"\nimport { EmailHelpText, Form, Input, InputContainer, Label, RegButton } from \"./RegistrationForm.styled\"\nimport { registrationThunk } from \"redux/auth/operations\"\nimport { useState } from \"react\"\n\nconst RegistrationForm = () => {\nconst dispatch=useDispatch()\nconst [name, setName]=useState('')\nconst [email, setEmail]=useState('')\nconst [password, setPassword] = useState('')\n    \n    const handleChange = (e) => {\n        switch (e.target.name) {\n            case 'name':\n                setName(e.target.value);\n                break\n            case 'email':\n                setEmail(e.target.value);\n                break\n            case 'password':\n                setPassword(e.target.value);\n                break\n            default: return;   \n        }\n        \n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const name = e.target.elements.name.value;\n        const password = e.target.elements.password.value;\n        const email = e.target.elements.email.value;\n        if (!name || !password || !email) {\n            alert('Please fill in all fields of the form')\n            return\n        }\n        dispatch(registrationThunk({ name, email, password }))\n        setName('');\n        setEmail('');\n        setPassword('')\n    }\n    return (\n         <Form onSubmit={handleSubmit}>\n                <InputContainer>\n                    <Label htmlFor=\"inputName\" className=\"form-label\" >Name</Label>\n                <Input type=\"text\" maxLength={15} onChange={handleChange} className=\"form-control\" id=\"inputName\" name='name' value={name} />\n                </InputContainer>\n                <InputContainer >\n                    <Label htmlFor=\"inputEmail1\" className=\"form-label\">Email address</Label>\n                <Input type=\"email\" onChange={handleChange} className=\"form-control\" id=\"inputEmail1\" aria-describedby=\"emailHelp\" name='email' value={email} />\n                    <EmailHelpText id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</EmailHelpText>\n                </InputContainer>\n                <InputContainer >\n                    <Label htmlFor=\"inputPassword1\" className=\"form-label\">Password</Label>\n                <Input type=\"password\" onChange={handleChange} className=\"form-control\" id=\"inputPassword1\" name='password' value={password} />\n                </InputContainer>\n                <RegButton type=\"submit\" className=\"btn btn-primary\">Register</RegButton>\n            </Form>\n    )\n}\n\nexport default RegistrationForm","import styled from '@emotion/styled';\nimport phoneBg from './/..//..//images/deskBgImg.png';\nimport { devices } from 'constants/constants';\nexport const Container = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  height: auto;\n  box-shadow: 0px 0px 100px 50px #000;\n  margin-top: 64px;\n  @media screen and ${devices.xs} {\n    width: 480px;\n  }\n  @media screen and ${devices.md} {\n    width: 768px;\n  }\n  @media screen and ${devices.lg} {\n    width: 1200px;\n  }\n`;\nexport const BgImg = styled.div`\n  background-image: url(${phoneBg});\n  height: 350px;\n  background-size: cover;\n  background-position: top;\n  background-repeat: no-repeat;\n  @media screen and ${devices.xs} {\n    background-size: 480px 350px;\n  }\n  @media screen and ${devices.md} {\n    height: 415px;\n    background-size: 768px 415px;\n  }\n  @media screen and ${devices.lg} {\n    height: 700px;\n    background-size: 1200px auto;\n  }\n`;\nexport const RegistratonPageText = styled.div`\n  background: rgb(229 232 238);\n  backdropfilter: blur(10px);\n  padding: 24px;\n  font-size: 24px;\n  font-family: 'Caveat', cursive;\n`;\n","import RegistrationForm from \"components/RegistrationForm/RegistrationForm\"\nimport { BgImg, Container, RegistratonPageText } from \"./Registration.styled\"\n\nconst Registration = () => {\n    return (\n        <>\n    \n        <Container>\n            <RegistrationForm/>\n            <BgImg/>\n            <RegistratonPageText style={{background: 'rgb(229 232 238)', backdropFilter: 'blur(10px)', padding:24}}>\n                <p>Welcome to the Phonebook!</p>\n                <ul>1.Registration:\n                    <li>On the main application page, click on the \"Registration\" button.</li>\n                    <li>Enter your details: username, email address, and password.</li>\n                    <li>Click on the \"Register\" button to create an account in the Phonebook.</li>\n                </ul>\n                \n                <ul>2.Login:\n                    <li>After successful registration, return to the main page and enter your email address and password.</li>\n                    <li>Click on the \"Login\" button to access your account.</li>\n                </ul>\n                 \n                <ul>3.Creating Contacts:\n                    <li>After logging in, you will be redirected to the page with your contacts.</li>\n                    <li>Click on the \"Add Contact\" button to create a new contact.</li>\n                    <li>Enter the necessary information about the contact, such as the contact's name and phone number.</li>\n                    <li>Click on the \"Save\" button to add the contact to your Phonebook.</li>\n                </ul>\n                \n                <ul>4.Searching and Filtering Contacts:\n                    <li>To find a specific contact, use the search field on the contacts page.</li>\n                    <li>Enter the name or other contact details for quick searching.</li>\n                    <li>To filter contacts by name, use the filtering feature on the contacts page.</li>\n                </ul>\n                \n                <ul>5.Deleting Contacts:\n                    <li>If you want to delete a contact, locate it on the contacts page.</li>\n                    <li>Click on the \"Delete\" button next to the respective contact.</li>\n                    <li>Confirm the deletion if prompted.</li>      \n                </ul>\n                \n                <ul>6.Personal Page:\n                    <li>You can access your personal page at any time using your account credentials.</li>\n                    <li>On this page, you will find all your saved contacts, accessible only to you.</li>\n                </ul>\n                \n                <p>Now that you have registered, logged in, and created your contacts, you can conveniently manage your Phonebook.\n                    Remember that your contacts will be stored on the server, and you can access them, make changes,\n                    and delete unnecessary contacts whenever you need to.\n                </p>\n        </RegistratonPageText>\n\n        </Container>\n        \n        </>\n           \n    )\n}\n\nexport default Registration"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","devices","InputContainer","_templateObject2","Label","_templateObject3","Input","_templateObject4","EmailHelpText","_templateObject5","RegButton","_templateObject6","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleChange","e","target","value","_jsxs","onSubmit","preventDefault","elements","registrationThunk","alert","children","_jsx","htmlFor","className","type","maxLength","onChange","id","Container","BgImg","phoneBg","RegistratonPageText","_Fragment","RegistrationForm","style","background","backdropFilter","padding"],"sourceRoot":""}